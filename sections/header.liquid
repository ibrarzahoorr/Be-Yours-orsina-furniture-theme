{%- liquid
  assign logo_position = section.settings.logo_position
  assign enable_transparent_header = false

  if template == 'index' and section.settings.enable_transparent_header
    assign enable_transparent_header = true
  endif

  if template.name == 'collection' and section.settings.enable_transparent_header_collection and collection.image
    assign enable_transparent_header = false
  endif

  if request.page_type == 'page' and section.settings.enable_transparent_header_custom != blank and section.settings.enable_transparent_header_custom.links != blank
    for link in section.settings.enable_transparent_header_custom.links
      if page.handle == link.object.handle
        assign enable_transparent_header = true
      endif
    endfor
  endif

  assign enable_dropdown_menu = section.settings.enable_dropdown_menu
  assign enable_sticky_header = section.settings.enable_sticky_header
-%}

{%- style -%}
  #shopify-section-{{ section.id }} {
    --section-padding-top: {{ section.settings.padding_top }}px;
    --section-padding-bottom: {{ section.settings.padding_bottom }}px;
    --image-logo-height: {{ section.settings.mobile_logo_height }}px;
    --gradient-header-background: {% if section.settings.gradient_background != blank %}{{ section.settings.gradient_background }}{% else %}{{ section.settings.colors_background }}{% endif %};
    --color-header-background: {{ section.settings.colors_background.red }}, {{ section.settings.colors_background.green }}, {{ section.settings.colors_background.blue }};
    --color-header-foreground: {{ section.settings.colors_text.red }}, {{ section.settings.colors_text.green }}, {{ section.settings.colors_text.blue }};
    --color-header-border: {{ section.settings.colors_border.red }}, {{ section.settings.colors_border.green }}, {{ section.settings.colors_border.blue }};
    --color-highlight: {{ section.settings.colors_highlight.red }}, {{ section.settings.colors_highlight.green }}, {{ section.settings.colors_highlight.blue }};
    --color-icons: {{ section.settings.colors_icons.red }}, {{ section.settings.colors_icons.green }}, {{ section.settings.colors_icons.blue }};
    --icon-weight: 1.5px;
  }
{%- endstyle -%}
<style>
  /* Single Line Header CSS - Complete Version with Full Width Mega Menu for Desktop */
  * {
    box-sizing: border-box;
  }
  
  /* Header Wrapper */
  .header-wrapper {
    background-color: {% if enable_transparent_header %}transparent{% else %}rgb(var(--color-header-background)){% endif %};
    border-bottom: {% if enable_transparent_header %}none{% else %}1px solid rgb(var(--color-header-border)){% endif %};
    position: relative;
    transition: all 0.3s ease;
    overflow: visible !important;
    z-index: 100;
  }
  
  .header-wrapper.header-transparent {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    z-index: 100;
    background-color: transparent;
    border-bottom: none;
  }
  
  /* Shopify Section Header */
  .shopify-section-header {
    position: relative;
    z-index: 90;
    overflow: visible !important;
  }
  
  .shopify-section-header-sticky {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    z-index: 90;
  }
  
  /* Sticky Header */
  sticky-header {
    position: relative;
    z-index: 90;
    overflow: visible !important;
  }
  
  /* MAIN HEADER - FLEXIBLE LAYOUT */
  .header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 1px 1px;
    width: 100%;
    max-width: 1400px;
    margin: 0 auto;
    position: relative;
    gap: 20px;
    z-index: 101;
  }
  
  /* Logo Section - FLEXIBLE */
  .header__left {
    flex: 0 1 auto;
    display: flex;
    align-items: center;
    gap: 16px;
    min-width: 0;
  }
  
  .header__heading-link {
    text-decoration: none;
    color: {% if enable_transparent_header %}{{ section.settings.transparent_text_color }}{% else %}rgb(var(--color-header-foreground)){% endif %};
    display: flex;
    align-items: center;
  }
  
  .header__heading-logo {
    height: var(--image-logo-height);
    width: auto;
    max-width: 100%;
    object-fit: contain;
  }
  
  .header__heading .h2 {
    font-size: clamp(20px, 4vw, 28px);
    font-weight: 700;
    letter-spacing: 2px;
    margin: 0;
    white-space: nowrap;
  }
  
  /* CENTER MAIN MENU - FLEXIBLE */
  .header__center {
    flex: 1 1 auto;
    display: flex;
    justify-content: center;
    margin: 0 20px;
    min-width: 0;
    overflow: visible !important;
    position: static;
  }
  
  .nav-menu {
    display: flex;
    align-items: center;
    gap: clamp(15px, 2vw, 30px);
    list-style: none;
    margin: 0;
    padding: 0;
    flex-wrap: nowrap;
  }
  
  .nav-item {
    position: relative;
    flex: 0 1 auto;
    z-index: auto;
  }
  
  .nav-item:hover {
    z-index: 9998;
  }
  
  .nav-item.active {
    z-index: 9998;
  }
  
  .nav-link {
    display: block;
    padding: 8px 0;
    color: {% if enable_transparent_header %}{{ section.settings.transparent_text_color }}{% else %}rgb(var(--color-header-foreground)){% endif %};
    text-decoration: none;
    font-size: clamp(12px, 1.2vw, 14px);
    font-weight: 500;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    transition: color 0.3s ease;
    white-space: nowrap;
  }
  
  .nav-link:hover,
  .nav-item:hover .nav-link {
    color: rgb(var(--color-highlight));
  }
  
  .nav-link.sale {
    color: #e74c3c;
    font-weight: 600;
  }
  
  /* Icons Section - FLEXIBLE */
  .header__right {
    flex: 0 1 auto;
    display: flex;
    align-items: center;
    gap: clamp(12px, 2vw, 20px);
  }
  
  .header__icon {
    color: {% if enable_transparent_header %}{{ section.settings.transparent_text_color }}{% else %}rgb(var(--color-icons)){% endif %};
    cursor: pointer;
    transition: color 0.3s ease;
    text-decoration: none;
    position: relative;
    padding: 4px;
    background: none;
    border: none;
    outline: none;
  }
  
  /* Search button specific - Remove all borders */
  .search-modal-toggle {
    background: none !important;
    border: none !important;
    outline: none !important;
    box-shadow: none !important;
    padding: 4px;
  }
  
  .header__icon:focus {
    outline: none;
    box-shadow: none;
  }
  
  .header__icon:hover {
    color: rgb(var(--color-highlight));
    transform: translateY(-2px);
  }
  
  .header__icon svg {
    width: 22px;
    height: 22px;
    stroke-width: var(--icon-weight);
  }
  
  .cart-count-bubble {
    background-color: #e74c3c;
    color: white;
    border-radius: 50%;
    width: 18px;
    height: 18px;
    font-size: 11px;
    font-weight: 600;
    display: flex;
    align-items: center;
    justify-content: center;
    position: absolute;
    top: -8px;
    right: -8px;
  }
  
  /* MEGA MENU - FULL WIDTH FOR DESKTOP */
  .mega-menu {
    position: fixed !important;
    top: var(--mega-menu-top, 60px) !important;
    left: 0 !important;
    right: 0 !important;
    width: 100vw !important;
    transform: none !important;
    background-color: white;
    border: 1px solid rgb(var(--color-header-border));
    border-left: none;
    border-right: none;
    border-top: none;
    box-shadow: 0 10px 40px rgba(0,0,0,0.15);
    border-radius: 0;
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s ease;
    z-index: 9999 !important;
    pointer-events: none;
    margin-top: -1px;
    max-height: 80vh;
    overflow-y: auto;
  }
  
  .nav-item:hover .mega-menu,
  .nav-item.active .mega-menu {
    opacity: 1;
    visibility: visible;
    pointer-events: all;
  }
  
  .mega-menu-content {
    padding: 40px;
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
    gap: 25px;
    width: 100%;
    max-width: 1400px;
    margin: 0 auto;
    background-color: white;
    position: relative;
    z-index: 9999;
    min-height: auto;
  }
  
  /* Flexible Grid Based on Item Count and Screen Size */
  @media screen and (min-width: 1400px) {
    .mega-menu-content {
      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
      gap: 30px;
    }
    
    /* For many items on large screens */
    .mega-menu-content.many-items {
      grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
      gap: 25px;
    }
  }
  
  @media screen and (max-width: 1399px) and (min-width: 1200px) {
    .mega-menu-content {
      grid-template-columns: repeat(auto-fit, minmax(190px, 1fr));
      gap: 25px;
    }
    
    .mega-menu-content.many-items {
      grid-template-columns: repeat(auto-fit, minmax(170px, 1fr));
      gap: 20px;
    }
  }
  
  @media screen and (max-width: 1199px) and (min-width: 900px) {
    .mega-menu-content {
      grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
      gap: 20px;
      padding: 35px;
    }
    
    .mega-menu-content.many-items {
      grid-template-columns: repeat(auto-fit, minmax(160px, 1fr));
      gap: 18px;
    }
  }
  
  @media screen and (max-width: 899px) and (min-width: 768px) {
    .mega-menu-content {
      grid-template-columns: repeat(auto-fit, minmax(160px, 1fr));
      gap: 18px;
      padding: 30px;
    }
    
    .mega-menu-content.many-items {
      grid-template-columns: repeat(auto-fit, minmax(140px, 1fr));
      gap: 15px;
    }
  }
  
  .menu-column {
    padding: 0 10px;
    min-width: 0;
  }
  
  /* Updated clickable heading styles */
  .menu-column h3 {
    margin: 0;
    padding: 0;
  }
  
  .menu-column-heading {
    font-size: 13px;
    font-weight: 600;
    color: #2c2c2c;
    margin-bottom: 15px;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    border-bottom: 2px solid rgb(var(--color-highlight));
    padding-bottom: 8px;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    text-decoration: none;
    display: block;
    transition: all 0.3s ease;
  }
  
  .menu-column-heading:hover {
    color: rgb(var(--color-highlight));
    transform: translateX(3px);
  }
  
  /* Responsive adjustments for column headers */
  @media screen and (max-width: 1199px) {
    .menu-column-heading {
      font-size: 12px;
      margin-bottom: 12px;
      padding-bottom: 6px;
    }
  }
  
  @media screen and (max-width: 899px) {
    .menu-column {
      padding: 0 8px;
    }
    
    .menu-column-heading {
      font-size: 11px;
      margin-bottom: 10px;
    }
  }
  
  /* Extra columns class for 7+ columns */
  .mega-menu-content.extra-columns {
    grid-template-columns: repeat(auto-fit, minmax(160px, 1fr));
    gap: 20px;
  }
  
  @media screen and (max-width: 1199px) {
    .mega-menu-content.extra-columns {
      grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
      gap: 15px;
    }
  }
  
  @media screen and (max-width: 899px) {
    .mega-menu-content.extra-columns {
      grid-template-columns: repeat(auto-fit, minmax(130px, 1fr));
      gap: 12px;
    }
  }
  
  .menu-items {
    display: flex;
    flex-direction: column;
    gap: 8px;
  }
  
  .menu-item {
    display: flex;
    align-items: center;
    gap: 10px;
    padding: 6px;
    text-decoration: none;
    color: #666;
    font-size: 13px;
    transition: all 0.3s ease;
    border-radius: 4px;
  }
  
  .menu-item:hover {
    color: rgb(var(--color-highlight));
    background-color: rgba(var(--color-highlight), 0.05);
    transform: translateX(3px);
  }
  
  /* UPDATED MEGA MENU ICON SIZE */
  .menu-icon {
    width: 42px;
    height: 42px;
    background-color: #f5f3f0;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;
    flex-shrink: 0;
    transition: transform 0.3s ease;
  }
  
  /* Responsive menu items */
  @media screen and (max-width: 1199px) {
    .menu-item {
      gap: 8px;
      padding: 5px;
      font-size: 12px;
    }
    
    .menu-icon {
      width: 36px;
      height: 36px;
    }
  }
  
  @media screen and (max-width: 899px) {
    .menu-item {
      gap: 6px;
      padding: 4px;
      font-size: 11px;
    }
    
    .menu-icon {
      width: 32px;
      height: 32px;
    }
  }
  
  /* For extra small items in mega menu */
  .mega-menu-content.many-items .menu-item {
    font-size: 12px;
    padding: 5px;
    gap: 8px;
  }
  
  .mega-menu-content.many-items .menu-icon {
    width: 36px;
    height: 36px;
  }
  
  .mega-menu-content.extra-columns .menu-item {
    font-size: 11px;
    padding: 4px;
    gap: 6px;
  }
  
  .mega-menu-content.extra-columns .menu-icon {
    width: 32px;
    height: 32px;
  }
  
  .menu-item:hover .menu-icon {
    transform: scale(1.1);
  }
  
  .menu-icon img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
  
  /* Mobile Menu Toggle */
  .mobile-menu-toggle {
    display: none;
    background: none;
    border: none;
    padding: 8px;
    cursor: pointer;
    color: {% if enable_transparent_header %}{{ section.settings.transparent_text_color }}{% else %}rgb(var(--color-icons)){% endif %};
    z-index: 102;
  }
  
  .mobile-menu-toggle:hover {
    color: rgb(var(--color-highlight));
  }
  
  /* Mobile Menu Styles */
  .mobile-menu {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100vh;
    background: white;
    z-index: 10000;
    transform: translateX(-100%);
    transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    overflow-y: auto;
  }
  
  .mobile-menu.active {
    transform: translateX(0);
    box-shadow: 2px 0 20px rgba(0,0,0,0.2);
  }
  
  .mobile-menu-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 20px 24px;
    border-bottom: 1px solid #eee;
    background-color: #fafafa;
  }
  
  .mobile-menu-logo {
    flex: 1;
  }
  
  .mobile-menu-close {
    background: none;
    border: none;
    font-size: 28px;
    cursor: pointer;
    color: #333;
    padding: 0;
    width: 35px;
    height: 35px;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: transform 0.3s ease;
  }
  
  .mobile-menu-close:hover {
    transform: rotate(90deg);
    color: rgb(var(--color-highlight));
  }
  
  .mobile-menu-content {
    padding: 20px 24px;
  }
  
  .mobile-nav-item {
    border-bottom: 1px solid #f0f0f0;
    transition: background-color 0.3s ease;
  }
  
  .mobile-nav-item:hover {
    background-color: #fafafa;
  }
  
  .mobile-nav-link {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 16px 0;
    color: #333;
    text-decoration: none;
    font-weight: 500;
    font-size: 16px;
    transition: color 0.3s ease;
  }
  
  .mobile-nav-link:hover {
    color: rgb(var(--color-highlight));
  }
  
  .mobile-dropdown-toggle {
    background: none;
    border: none;
    color: #666;
    font-size: 20px;
    cursor: pointer;
    padding: 0 0 0 10px;
    transition: transform 0.3s ease;
  }
  
  .mobile-dropdown-toggle.active {
    transform: rotate(45deg);
  }
  
  .mobile-dropdown {
    display: none;
    padding: 10px 0 10px 20px;
    background-color: #f9f9f9;
    margin: 0 -24px;
    padding-right: 24px;
    padding-left: 44px;
  }
  
  .mobile-dropdown.active {
    display: block;
    animation: slideDown 0.3s ease;
  }
  
  @keyframes slideDown {
    from {
      opacity: 0;
      transform: translateY(-10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  .mobile-sub-item {
    padding: 8px 0;
  }
  
  .mobile-sub-link {
    color: #666;
    text-decoration: none;
    font-size: 14px;
    display: flex;
    align-items: center;
    gap: 12px;
    transition: all 0.3s ease;
    padding: 8px 12px;
    border-radius: 6px;
    margin: 2px 0;
  }
  
  .mobile-sub-link:hover {
    color: rgb(var(--color-highlight));
    background-color: rgba(var(--color-highlight), 0.05);
    transform: translateX(5px);
  }
  
  .mobile-menu-icon {
    width: 35px;
    height: 35px;
    background-color: #f0f0f0;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;
    flex-shrink: 0;
    transition: transform 0.3s ease;
  }
  
  .mobile-sub-link:hover .mobile-menu-icon {
    transform: scale(1.1);
  }
  
  .mobile-menu-icon img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
  
  .mobile-menu-icon.no-image {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
    font-size: 16px;
  }
  
  /* Collection item with special styling if it has image */
  .mobile-sub-item.has-image {
    background: linear-gradient(90deg, rgba(var(--color-highlight), 0.05) 0%, transparent 100%);
    border-left: 3px solid rgb(var(--color-highlight));
    border-radius: 0 8px 8px 0;
    margin: 4px 0;
  }
  
  /* Search in mobile menu */
  .mobile-search {
    padding: 20px 0;
    border-bottom: 1px solid #eee;
    position: relative;
  }
  
  .mobile-search-input {
    width: 100%;
    padding: 12px 45px 12px 16px;
    border: 2px solid #ddd;
    border-radius: 25px;
    font-size: 16px;
    outline: none;
    transition: border-color 0.3s ease;
  }
  
  .mobile-search-input:focus {
    border-color: rgb(var(--color-highlight));
  }
  
  /* Search Modal Styles */
  .search-modal {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100vh;
    background: rgba(0,0,0,0.8);
    backdrop-filter: blur(5px);
    z-index: 10001;
    display: flex;
    align-items: flex-start;
    justify-content: center;
    padding-top: 10vh;
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s ease;
  }
  
  .search-modal.active {
    opacity: 1;
    visibility: visible;
  }
  
  .search-modal-content {
    background: white;
    border-radius: 12px;
    width: 90%;
    max-width: 600px;
    max-height: 80vh;
    overflow: hidden;
    transform: translateY(-20px) scale(0.95);
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    box-shadow: 0 20px 60px rgba(0,0,0,0.3);
  }
  
  .search-modal.active .search-modal-content {
    transform: translateY(0) scale(1);
  }
  
  .search-modal-header {
    padding: 20px 24px;
    border-bottom: 1px solid #eee;
    display: flex;
    align-items: center;
    gap: 16px;
    position: relative;
  }
  
  .search-modal-input {
    flex: 1;
    border: none;
    outline: none;
    font-size: 18px;
    color: #333;
    background: transparent;
    padding-right: 40px;
  }
  
  .search-modal-input::placeholder {
    color: #999;
  }
  
  .search-modal-close {
    position: absolute;
    top: 50%;
    right: 20px;
    transform: translateY(-50%);
    background: none;
    border: none;
    font-size: 28px;
    cursor: pointer;
    color: #666;
    width: 36px;
    height: 36px;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 50%;
    transition: all 0.3s ease;
  }
  
  .search-modal-close:hover {
    background-color: #f5f5f5;
    transform: translateY(-50%) rotate(90deg);
    color: rgb(var(--color-highlight));
  }
  
  /* Dynamic grid classes applied by JavaScript */
  .mega-menu-content.dynamic-grid-1 {
    grid-template-columns: repeat(auto-fit, minmax(160px, 1fr));
    gap: 20px;
  }
  
  .mega-menu-content.dynamic-grid-2 {
    grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
    gap: 22px;
  }
  
  .mega-menu-content.dynamic-grid-3 {
    grid-template-columns: repeat(auto-fit, minmax(170px, 1fr));
    gap: 18px;
  }
  
  .mega-menu-content.dynamic-grid-4 {
    grid-template-columns: repeat(auto-fit, minmax(160px, 1fr));
    gap: 16px;
  }
  
  .mega-menu-content.dynamic-grid-5 {
    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
    gap: 15px;
  }
  
  /* Scroll optimization for mega menu with many items */
  .mega-menu-content.many-items {
    max-height: 70vh;
    overflow-y: auto;
  }
  
  .mega-menu-content.extra-columns {
    max-height: 75vh;
    overflow-y: auto;
  }
  
  /* Hover optimization for performance */
  .mega-menu-content {
    will-change: scroll-position;
    transform: translateZ(0);
  }

  /* ============ CART DRAWER STYLES START - EXACT DESIGN MATCH ============ */
  /* Cart Drawer Overlay */
  .cart-drawer-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.5);
    z-index: 99998;
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s ease;
  }
  
  .cart-drawer-overlay.active {
    opacity: 1;
    visibility: visible;
  }
  
  /* Cart Drawer Container - Desktop with Left Sidebar */
  .cart-drawer {
    position: fixed;
    top: 0;
    right: -900px;
    width: 900px;
    max-width: 100vw;
    height: 100%;
    background: #fff;
    z-index: 99999;
    transition: right 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    display: flex;
    flex-direction: row;
    box-shadow: -5px 0 20px rgba(0, 0, 0, 0.1);
  }
  
  .cart-drawer.active {
    right: 0;
  }
  
  /* YOU MAY ALSO LIKE SECTION - LEFT SIDEBAR */
  .you-may-like-section {
    width: 380px;
    flex-shrink: 0;
    background: #FCF9F6;
    height: 100%;
    overflow-y: auto;
    padding: 40px 30px;
    border-right: 1px solid #E5E5E5;
  }
  
  .you-may-like-title {
    font-size: 11px;
    font-weight: 400;
    letter-spacing: 2px;
    text-transform: uppercase;
    color: #666;
    margin: 0 0 30px 0;
    text-align: center;
  }
  
  .recommended-products {
    display: flex;
    flex-direction: column;
    gap: 0;
  }
  
  .recommended-product {
    display: flex;
    align-items: center;
    gap: 20px;
    padding: 20px 0;
    background: transparent;
    border-bottom: 1px solid #E5E5E5;
    transition: all 0.3s ease;
  }
  
  .recommended-product:last-child {
    border-bottom: none;
  }
  
  .recommended-product:hover {
    background: rgba(255, 255, 255, 0.5);
  }
  
  .recommended-product-image {
    width: 80px;
    height: 80px;
    object-fit: cover;
    flex-shrink: 0;
    background: #fff;
    border: 1px solid #E5E5E5;
  }
  
  .recommended-product-info {
    flex: 1;
    display: flex;
    flex-direction: column;
    gap: 8px;
  }
  
  .recommended-product-title {
    font-size: 14px;
    font-weight: 400;
    color: #B8653C;
    text-decoration: none;
    line-height: 1.4;
  }
  
  .recommended-product-title:hover {
    color: #A85A3B;
  }
  
  .recommended-product-price {
    display: flex;
    align-items: center;
    gap: 8px;
    margin: 4px 0;
  }
  
  .recommended-price-value {
    font-size: 13px;
    color: #333;
  }
  
  .price-suffix {
    font-size: 10px;
    color: #666;
    vertical-align: super;
  }
  
  .recommended-add-btn {
    background: transparent;
    color: #B8653C;
    border: none;
    padding: 0;
    font-size: 11px;
    font-weight: 400;
    cursor: pointer;
    text-transform: uppercase;
    letter-spacing: 1px;
    transition: all 0.3s ease;
    align-self: flex-start;
    text-decoration: none;
    position: relative;
  }
  
  .recommended-add-btn::after {
    content: '→';
    margin-left: 8px;
    transition: transform 0.3s ease;
    display: inline-block;
  }
  
  .recommended-add-btn:hover {
    color: #A85A3B;
  }
  
  .recommended-add-btn:hover::after {
    transform: translateX(3px);
  }
  
  /* CART MAIN SECTION - RIGHT SIDE */
  .cart-drawer-wrapper {
    flex: 1;
    display: flex;
    flex-direction: column;
    min-width: 0;
    background: #fff;
  }
  
  /* Cart Header */
  .cart-drawer-header {
    padding: 30px;
    border-bottom: 1px solid #E5E5E5;
    display: flex;
    justify-content: space-between;
    align-items: center;
    background: #fff;
  }
  
  .cart-drawer-title {
    font-size: 11px;
    font-weight: 400;
    letter-spacing: 2px;
    text-transform: uppercase;
    margin: 0;
    color: #666;
  }
  
  .cart-drawer-close {
    background: none;
    border: none;
    font-size: 24px;
    cursor: pointer;
    color: #999;
    width: 32px;
    height: 32px;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.2s;
    font-weight: 300;
  }
  
  .cart-drawer-close:hover {
    color: #333;
  }
  
  /* Cart Shipping Notice */
  .cart-shipping-notice {
    padding: 15px 30px;
    background: #F0FFF4;
    color: #22C55E;
    font-size: 13px;
    text-align: center;
  }
  
  /* Cart Body */
  .cart-drawer-body {
    flex: 1;
    overflow-y: auto;
    padding: 30px;
    background: #fff;
  }
  
  /* Empty Cart */
  .cart-empty-state {
    text-align: center;
    padding: 60px 20px;
  }
  
  .cart-empty-icon {
    width: 100px;
    height: 100px;
    margin: 0 auto 20px;
    opacity: 0.3;
  }
  
  .cart-empty-text {
    font-size: 18px;
    color: #666;
    margin-bottom: 20px;
  }
  
  .continue-shopping-btn {
    background: #B8653C;
    color: #fff;
    padding: 14px 40px;
    border: none;
    font-size: 11px;
    font-weight: 400;
    cursor: pointer;
    text-transform: uppercase;
    letter-spacing: 2px;
    transition: all 0.3s;
  }
  
  .continue-shopping-btn:hover {
    background: #A85A3B;
    transform: translateY(-2px);
  }
  
  /* Cart Items Container */
  .cart-items-container {
    display: flex;
    flex-direction: column;
    gap: 0;
  }
  
  /* Individual Cart Item */
  .cart-drawer-item {
    background: #fff;
    padding: 20px 0;
    display: flex;
    gap: 20px;
    position: relative;
    transition: all 0.3s;
    border-bottom: 1px solid #E5E5E5;
  }
  
  .cart-drawer-item:last-child {
    border-bottom: none;
  }
  
  .cart-item-image {
    width: 100px;
    height: 120px;
    object-fit: cover;
    flex-shrink: 0;
    background: #f5f5f5;
  }
  
  .cart-item-info {
    flex: 1;
    display: flex;
    flex-direction: column;
    gap: 10px;
  }
  
  .cart-item-title {
    font-size: 14px;
    font-weight: 400;
    color: #B8653C;
    text-decoration: none;
    line-height: 1.4;
  }
  
  .cart-item-title:hover {
    color: #A85A3B;
  }
  
  .cart-item-variant {
    font-size: 12px;
    color: #666;
  }
  
  .cart-item-price-row {
    display: flex;
    align-items: center;
    gap: 10px;
  }
  
  .cart-item-price {
    font-size: 14px;
    color: #333;
  }
  
  /* Quantity Selector */
  .cart-item-actions {
    display: flex;
    align-items: flex-end;
    justify-content: space-between;
    margin-top: auto;
  }
  
  .cart-quantity-selector {
    display: flex;
    align-items: center;
    border: 1px solid #E5E5E5;
    background: #fff;
  }
  
  .quantity-btn {
    width: 32px;
    height: 32px;
    border: none;
    background: #fff;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.2s;
    font-size: 14px;
    color: #666;
  }
  
  .quantity-btn:hover:not(:disabled) {
    background: #f5f5f5;
  }
  
  .quantity-btn:disabled {
    opacity: 0.3;
    cursor: not-allowed;
  }
  
  .quantity-value {
    width: 50px;
    text-align: center;
    border: none;
    border-left: 1px solid #E5E5E5;
    border-right: 1px solid #E5E5E5;
    font-size: 14px;
    font-weight: 400;
    background: #fff;
  }
  
  /* Cart Footer */
  .cart-drawer-footer {
    padding: 30px;
    border-top: 1px solid #E5E5E5;
    background: #fff;
  }
  
  .cart-note-section {
    margin-bottom: 20px;
  }
  
  .cart-note-toggle {
    background: none;
    border: none;
    color: #666;
    font-size: 11px;
    text-transform: uppercase;
    letter-spacing: 1px;
    cursor: pointer;
    display: flex;
    align-items: center;
    gap: 8px;
  }
  
  .cart-note-toggle svg {
    width: 16px;
    height: 16px;
  }
  
  .cart-subtotal-row {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 20px;
    font-size: 14px;
    color: #333;
  }
  
  .cart-total-price {
    font-size: 18px;
    font-weight: 400;
  }
  
  .cart-footer-buttons {
    display: flex;
    gap: 15px;
  }
  
  .cart-checkout-btn {
    flex: 1;
    padding: 14px;
    background: #B8653C;
    color: #fff;
    border: none;
    font-size: 11px;
    font-weight: 400;
    cursor: pointer;
    text-transform: uppercase;
    letter-spacing: 2px;
    transition: all 0.3s;
    text-decoration: none;
    text-align: center;
    display: block;
  }
  
  .cart-checkout-btn:hover {
    background: #A85A3B;
  }
  
  .cart-view-btn {
    flex: 1;
    padding: 14px;
    background: #fff;
    color: #333;
    border: 1px solid #E5E5E5;
    font-size: 11px;
    font-weight: 400;
    cursor: pointer;
    text-transform: uppercase;
    letter-spacing: 2px;
    transition: all 0.3s;
    text-decoration: none;
    text-align: center;
    display: block;
  }
  
  .cart-view-btn:hover {
    border-color: #B8653C;
    color: #B8653C;
  }
  
  /* Loading State */
  .cart-loading-state {
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 60px;
  }
  
  .cart-spinner {
    width: 40px;
    height: 40px;
    border: 3px solid #f3f3f3;
    border-top: 3px solid #B8653C;
    border-radius: 50%;
    animation: spin 1s linear infinite;
  }
  
  @keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }
  
  /* Cart Drawer Animation */
  .cart-drawer-item.removing {
    animation: slideOut 0.3s ease forwards;
  }
  
  @keyframes slideOut {
    to {
      transform: translateX(100%);
      opacity: 0;
    }
  }
  
  /* Mobile Responsive */
  @media screen and (max-width: 768px) {
    .cart-drawer {
      width: 100%;
      right: -100%;
      flex-direction: column;
    }
    
    .you-may-like-section {
      width: 100%;
      border-right: none;
      border-bottom: 1px solid #E5E5E5;
      padding: 20px;
      max-height: 300px;
    }
    
    .recommended-products {
      flex-direction: row;
      overflow-x: auto;
      gap: 15px;
    }
    
    .recommended-product {
      flex-direction: column;
      min-width: 150px;
      border: 1px solid #E5E5E5;
      padding: 15px;
      border-radius: 8px;
    }
  }
  /* ============ CART DRAWER STYLES END ============ */
  
  /* RESPONSIVE BREAKPOINTS - MOBILE LOGO CENTER & HIDE SEARCH */
  @media screen and (max-width: 1400px) {
    .mega-menu-content {
      padding: 35px;
    }
  }
  
  @media screen and (max-width: 1200px) {
    .nav-menu {
      gap: 20px;
    }
    
    .header {
      padding: 14px 20px;
    }
    
    .mega-menu-content {
      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
      padding: 30px;
    }
  }
  
  @media screen and (max-width: 990px) {
    /* Mobile Header - Flexible Layout */
    .header {
      display: flex;
      align-items: center;
      justify-content: space-between;
      position: relative;
      padding: 12px 16px;
      gap: 12px;
    }
    
    /* Mobile menu toggle - Left side */
    .mobile-menu-toggle {
      display: flex;
      align-items: center;
      justify-content: center;
      order: 1;
      flex: 0 0 auto;
      width: 44px;
      height: 44px;
      padding: 10px;
      z-index: 103;
    }
    
    /* Logo section - Center, flexible */
    .header__left {
      order: 2;
      flex: 1 1 auto;
      display: flex;
      justify-content: center;
      align-items: center;
      margin: 0;
      padding: 0 8px;
      min-width: 0;
    }
    
    /* Hide any duplicate mobile toggle */
    .header__left .mobile-menu-toggle {
      display: none;
    }
    
    /* Hide desktop navigation */
    .header__center {
      display: none;
    }
    
    /* Icons section - Right side, flexible */
    .header__right {
      order: 3;
      flex: 0 0 auto;
      display: flex;
      align-items: center;
      gap: 8px;
      position: static;
      transform: none;
    }
    
    /* Logo responsive sizing */
    .header__heading-link {
      display: flex;
      align-items: center;
      justify-content: center;
      max-width: 100%;
    }
    
    .header__heading-logo {
      max-width: 100%;
      height: auto;
    }
    
    .header__heading .h2 {
      text-align: center;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
    }
    
    /* Mobile icons optimization */
    .header__icon {
      display: flex;
      align-items: center;
      justify-content: center;
      width: 44px;
      height: 44px;
      padding: 10px;
    }
    
    .header__icon svg {
      width: 22px;
      height: 22px;
    }
    
    /* Hide search on mobile */
    .search-modal-toggle {
      display: none;
    }
    
    .mega-menu {
      display: none !important;
    }
  }
  
  @media screen and (max-width: 768px) {
    .header {
      padding: 12px 14px;
      gap: 10px;
    }
    
    /* Mobile toggle adjustments */
    .mobile-menu-toggle {
      width: 40px;
      height: 40px;
      padding: 8px;
    }
    
    /* Logo section responsive */
    .header__left {
      padding: 0 6px;
    }
    
    .header__heading .h2 {
      font-size: 20px;
      letter-spacing: 1px;
    }
    
    /* Icons section adjustments */
    .header__right {
      gap: 6px;
    }
    
    .header__icon {
      width: 40px;
      height: 40px;
      padding: 8px;
    }
    
    .header__icon svg {
      width: 20px;
      height: 20px;
    }
    
    /* Cart bubble responsive */
    .cart-count-bubble {
      width: 16px;
      height: 16px;
      font-size: 10px;
      top: -6px;
      right: -6px;
    }
    
    #shopify-section-{{ section.id }} {
      --image-logo-height: {{ section.settings.mobile_logo_height }}px;
    }
  }
  
  @media screen and (max-width: 500px) {
    .cart-drawer-body {
      padding: 20px;
    }
    
    .cart-drawer-item {
      padding: 15px 0;
    }
    
    .cart-item-image {
      width: 80px;
      height: 100px;
    }
  }
  
  @media screen and (max-width: 480px) {
    .header {
      padding: 10px 12px;
      gap: 8px;
    }
    
    /* Compact mobile toggle */
    .mobile-menu-toggle {
      width: 36px;
      height: 36px;
      padding: 6px;
    }
    
    .mobile-menu-toggle svg {
      width: 20px;
      height: 20px;
    }
    
    /* Logo section compact */
    .header__left {
      padding: 0 4px;
    }
    
    .header__heading .h2 {
      font-size: 18px;
      letter-spacing: 0.5px;
    }
    
    /* Icons section compact */
    .header__right {
      gap: 4px;
    }
    
    .header__icon {
      width: 36px;
      height: 36px;
      padding: 6px;
    }
    
    .header__icon svg {
      width: 18px;
      height: 18px;
    }
    
    /* Cart bubble small */
    .cart-count-bubble {
      width: 14px;
      height: 14px;
      font-size: 9px;
      top: -5px;
      right: -5px;
    }
    
    /* Mobile menu content adjustments */
    .mobile-menu-content {
      padding: 15px 20px;
    }
    
    .mobile-nav-link {
      font-size: 15px;
      padding: 14px 0;
    }
  }
  
  @media screen and (min-width: 750px) {
    #shopify-section-{{ section.id }} {
      --image-logo-height: {{ section.settings.logo_height }}px;
    }
  }
  
  /* Desktop only - Show search on desktop */
  @media screen and (min-width: 991px) {
    .search-modal-toggle {
      display: block !important;
    }
  }
  
  /* Print Styles */
  @media print {
    .header__right,
    .mobile-menu-toggle,
    .mega-menu,
    .mobile-menu,
    .search-modal,
    .cart-drawer {
      display: none !important;
    }
  }
  
  /* Accessibility - Focus Styles */
  .header__icon:focus-visible,
  .nav-link:focus-visible,
  .mobile-nav-link:focus-visible,
  .menu-item:focus-visible,
  .menu-column-heading:focus-visible {
    outline: 2px solid rgb(var(--color-highlight));
    outline-offset: 2px;
    border-radius: 4px;
  }
  
  /* Transparent Header Specific Styles */
  {%- if enable_transparent_header -%}
    .shopify-section-header:not(.shopify-section-header-sticky) .header-transparent .header::before {
      height: 0;
    }
    
    .header-transparent .mega-menu {
      border-top: none;
    }
  {%- endif -%}
  
  /* Animations */
  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(-5px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  .mega-menu {
    animation: fadeIn 0.3s ease forwards;
  }
  
  /* Hide/Show Header on Scroll */
  .shopify-section-header-hidden {
    transform: translateY(-100%);
    transition: transform 0.3s ease;
  }
  
  .shopify-section-header-sticky {
    background-color: rgb(var(--color-header-background));
    box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    transition: all 0.3s ease;
  }
  
  /* Scrollbar styling for mega menu */
  .mega-menu-content::-webkit-scrollbar {
    width: 6px;
  }
  
  .mega-menu-content::-webkit-scrollbar-track {
    background: #f1f1f1;
    border-radius: 3px;
  }
  
  .mega-menu-content::-webkit-scrollbar-thumb {
    background: rgb(var(--color-highlight));
    border-radius: 3px;
  }
  
  .mega-menu-content::-webkit-scrollbar-thumb:hover {
    background: rgba(var(--color-highlight), 0.8);
  }


  /* Force "You May Also Like" to appear below cart drawer on mobile */
@media (max-width: 990px) {
  #cart-drawer.with-recommendations {
    display: flex;
    flex-direction: column;
  }

  #you-may-like-section {
    order: 2; /* Moves it below cart items */
    width: 100%;
    margin-top: 1rem;
  }

  #cart-drawer-body {
    order: 1;
  }

  .cart-drawer-footer {
    order: 3;
  }
}

/* Mobile Cart Drawer Adjustments */
@media (max-width: 990px) {
  /* Cart items wrapper */
  #cart-drawer-body .cart-item {
    padding: 8px 10px; /* thoda kam padding */
    gap: 0.4rem;
  }

  /* Product image */
  #cart-drawer-body .cart-item img {
    width: 50px; /* chhoti image */
    height: 50px;
    object-fit: cover;
  }

  /* Product title & price */
  #cart-drawer-body .cart-item-details {
    font-size: 14px; /* chhota text */
  }

  /* Quantity input and buttons */
  #cart-drawer-body .cart-item-quantity input {
    width: 40px;
    height: 28px;
    font-size: 13px;
  }

  #cart-drawer-body .cart-item-quantity button {
    width: 28px;
    height: 28px;
    font-size: 14px;
  }

  /* Remove/delete icon */
  #cart-drawer-body .cart-item-remove {
    width: 20px;
    height: 20px;
    font-size: 16px;
  }

  /* Make cart body scrollable */
  #cart-drawer-body {
    max-height: 60vh; /* space for "You May Also Like" */
    overflow-y: auto;
  }

  /* Recommended section styling */
  #you-may-like-section {
    margin-top: 0.8rem;
  }
}


</style>

<!-- Continue with rest of the template... -->


<!-- UPDATED HEADER STRUCTURE -->
<{% if enable_sticky_header %}sticky-header{% else %}div{% endif %} class="header-wrapper{% if enable_transparent_header %} header-transparent{% endif %}">
  <header class="header">
    <!-- Mobile Menu Toggle - Positioned Absolutely -->
    <button class="mobile-menu-toggle" onclick="toggleMobileMenu()">
      <svg width="24" height="24">
        <use href="#icon-hamburger"></use>
      </svg>
    </button>
    
    <!-- LEFT: Logo Only (Center on Mobile) -->
    <div class="header__left">
      <!-- Logo -->
      {%- if request.page_type == 'index' -%}
        <h1 class="header__heading">
      {%- endif -%}
          <a href="{{ routes.root_url }}" class="header__heading-link">
            {%- if section.settings.logo != blank -%}
              {%- liquid
                assign logo = section.settings.logo
                assign logo_height = section.settings.logo_height
                assign logo_height_2x = section.settings.logo_height | times: 2
                assign mobile_logo = section.settings.mobile_logo | default: logo
                assign mobile_logo_height = section.settings.mobile_logo_height
                assign mobile_logo_height_2x = section.settings.mobile_logo_height | times: 2
              -%}

              {%- if mobile_logo -%}
                <img srcset="{{ mobile_logo | image_url: height: mobile_logo_height }} 1x, {{ mobile_logo | image_url: height: mobile_logo_height_2x }} 2x"
                  src="{{ mobile_logo | image_url: height: mobile_logo_height }}"
                  loading="lazy"
                  width="{{ mobile_logo.width }}"
                  height="{{ mobile_logo.height }}"
                  alt="{{ mobile_logo.alt | default: shop.name | escape }}"
                  class="header__heading-logo medium-hide large-up-hide"
                />
              {%- endif -%}

              <img srcset="{{ logo | image_url: height: logo_height }} 1x, {{ logo | image_url: height: logo_height_2x }} 2x"
                src="{{ logo | image_url: height: logo_height }}"
                loading="lazy"
                width="{{ logo.width }}"
                height="{{ logo.height }}"
                alt="{{ logo.alt | default: shop.name | escape }}"
                class="header__heading-logo{% if mobile_logo %} small-hide{% endif %}"
              />
            {%- else -%}
              <span class="h2">{{ shop.name }}</span>
            {%- endif -%}
          </a>
      {%- if request.page_type == 'index' -%}
        </h1>
      {%- endif -%}
    </div>

    <!-- CENTER: Main Navigation Menu (Desktop Only) -->
    <div class="header__center">
      {%- if section.settings.menu != blank -%}
        <nav class="nav-menu">
          {%- for link in section.settings.menu.links -%}
            <div class="nav-item">
              <a href="{{ link.url }}" class="nav-link{% if link.title contains 'Sale' %} sale{% endif %}">
                {{ link.title }}
              </a>
              
              {%- if link.links != blank -%}
                {%- liquid
                  assign total_items = 0
                  assign column_count = 0
                  for child_link in link.links
                    assign column_count = column_count | plus: 1
                    if child_link.links != blank
                      assign total_items = total_items | plus: child_link.links.size
                    else
                      assign total_items = total_items | plus: 1
                    endif
                  endfor
                -%}
                
                <div class="mega-menu">
                  <div class="mega-menu-content{% if total_items > 15 %} many-items{% endif %}{% if column_count > 6 %} extra-columns{% endif %}" data-columns="{{ column_count }}" data-items="{{ total_items }}">
                    {%- for child_link in link.links -%}
                      <div class="menu-column">
                        <h3>
                          <a href="{{ child_link.url }}" class="menu-column-heading">
                            {{ child_link.title }}
                          </a>
                        </h3>
                        <div class="menu-items">
                          {%- if child_link.links != blank -%}
                            {%- for grandchild_link in child_link.links -%}
                              <a href="{{ grandchild_link.url }}" class="menu-item">
                                <div class="menu-icon">
                                  {%- if grandchild_link.object.image -%}
                                    <img src="{{ grandchild_link.object.image | image_url: width: 50 }}" 
                                         alt="{{ grandchild_link.title }}"
                                         loading="lazy">
                                  {%- elsif grandchild_link.object.type == 'collection' -%}
                                    <span style="font-size: 16px;">🏷️</span>
                                  {%- else -%}
                                    <span style="font-size: 16px;">📁</span>
                                  {%- endif -%}
                                </div>
                                <span>{{ grandchild_link.title }}</span>
                              </a>
                            {%- endfor -%}
                          {%- else -%}
                            <!-- If no sub-items, show View All link -->
                            <a href="{{ child_link.url }}" class="menu-item">
                              <div class="menu-icon">
                                {%- if child_link.object.image -%}
                                  <img src="{{ child_link.object.image | image_url: width: 50 }}" 
                                       alt="{{ child_link.title }}"
                                       loading="lazy">
                                {%- elsif child_link.object.type == 'collection' -%}
                                  <span style="font-size: 16px;">🏷️</span>
                                {%- else -%}
                                  <span style="font-size: 16px;">📂</span>
                                {%- endif -%}
                              </div>
                              <span>View All {{ child_link.title }}</span>
                            </a>
                          {%- endif -%}
                        </div>
                      </div>
                    {%- endfor -%}
                  </div>
                </div>
              {%- endif -%}
            </div>
          {%- endfor -%}
        </nav>
      {%- endif -%}
    </div>

    <!-- RIGHT: Search (Desktop Only) + Account + Cart Icons -->
    <div class="header__right">
      <!-- Search Icon - Desktop Only -->
      <button class="header__icon search-modal-toggle" onclick="openSearchModal()" title="{{ 'general.search.search' | t }}">
        <svg width="24" height="24">
          <use href="#icon-search"></use>
        </svg>
      </button>
      
      <!-- Account -->
      {%- if shop.customer_accounts_enabled -%}
        <a href="{%- if customer -%}{{ routes.account_url }}{%- else -%}{{ routes.account_login_url }}{%- endif -%}" class="header__icon" title="{%- if customer -%}{{ 'customer.account_fallback' | t }}{%- else -%}{{ 'customer.log_in' | t }}{%- endif -%}">
          <svg width="24" height="24">
            <use href="#icon-account"></use>
          </svg>
        </a>
      {%- endif -%}

      <!-- Cart - Opens Drawer -->
      <button class="header__icon" id="cart-icon-bubble" onclick="openCartDrawer()" title="{{ 'templates.cart.cart' | t }}">
        <svg width="24" height="24">
          <use href="#icon-cart"></use>
        </svg>
        <span class="cart-count-bubble" style="display: {% if cart.item_count > 0 %}flex{% else %}none{% endif %}">
          {{ cart.item_count }}
        </span>
      </button>
    </div>
  </header>
</{% if enable_sticky_header %}sticky-header{% else %}div{% endif %}>

<!-- Cart Drawer HTML -->
<div class="cart-drawer-overlay" onclick="closeCartDrawer()"></div>
<div class="cart-drawer" id="cart-drawer">
  <!-- You May Also Like Section - Desktop pe left, Mobile pe bottom -->
  <div class="you-may-like-section" id="you-may-like-section" style="display: none;">
    <h3 class="you-may-like-title">{{ section.settings.recommended_title | default: "You May Also Like" }}</h3>
    <div class="recommended-products" id="recommended-products-container">
      <!-- Dynamic products will be loaded here -->
    </div>
  </div>
  
  <!-- Cart Main Wrapper -->
  <div class="cart-drawer-wrapper">
    <div class="cart-drawer-header">
      <h2 class="cart-drawer-title">
        Shopping Cart
        <span class="cart-items-count" id="cart-items-count">0 items</span>
      </h2>
      <button class="cart-drawer-close" onclick="closeCartDrawer()" aria-label="Close cart">
        ✕
      </button>
    </div>
    
    <div class="cart-drawer-body" id="cart-drawer-body">
      <div class="cart-loading-state">
        <div class="cart-spinner"></div>
      </div>
    </div>
    
    <div class="cart-drawer-footer" id="cart-drawer-footer" style="display: none;">
      <div class="cart-subtotal-row">
        <span>Subtotal:</span>
        <span id="cart-subtotal">{{ cart.total_price | money }}</span>
      </div>
      <div class="cart-total-row">
        <span>Total:</span>
        <span class="cart-total-price" id="cart-total">{{ cart.total_price | money }}</span>
      </div>
      <div class="cart-footer-buttons">
        <a href="/checkout" class="cart-checkout-btn">CHECKOUT</a>
        <a href="/cart" class="cart-view-btn">VIEW MY BAG</a>
      </div>
    </div>
  </div>
</div>

<!-- Search Modal -->
<div class="search-modal" id="search-modal" onclick="closeSearchModal(event)">
  <div class="search-modal-content" onclick="event.stopPropagation()">
    <div class="search-modal-header">
      <svg width="20" height="20" style="color: #666;">
        <use href="#icon-search"></use>
      </svg>
      <input type="text" class="search-modal-input" placeholder="{{ 'general.search.search' | t }}" id="search-modal-input" autocomplete="off">
      <button class="search-modal-close" onclick="closeSearchModal()">×</button>
    </div>
  </div>
</div>

<!-- Mobile Menu with Collection Images -->
<div class="mobile-menu" id="mobile-menu">
  <div class="mobile-menu-header">
    <!-- Mobile Menu Logo -->
    <div class="mobile-menu-logo">
      {%- if section.settings.mobile_logo != blank -%}
        <img src="{{ section.settings.mobile_logo | image_url: height: 30 }}" 
             alt="{{ shop.name }}" 
             style="height: 30px; width: auto;">
      {%- elsif section.settings.logo != blank -%}
        <img src="{{ section.settings.logo | image_url: height: 30 }}" 
             alt="{{ shop.name }}" 
             style="height: 30px; width: auto;">
      {%- else -%}
        <span style="font-weight: 700; font-size: 18px; color: #333;">{{ shop.name }}</span>
      {%- endif -%}
    </div>
    <button class="mobile-menu-close" onclick="closeMobileMenu()">×</button>
  </div>
  
  <!-- Mobile Search -->
  <div class="mobile-search">
    <form action="{{ routes.search_url }}" method="get" style="display: flex; position: relative;">
      <input type="search" class="mobile-search-input" placeholder="{{ 'general.search.search' | t }}" name="q" value="{{ search.terms | escape }}">
      <button type="submit" style="position: absolute; right: 8px; top: 50%; transform: translateY(-50%); background: none; border: none; color: #666; padding: 8px;" aria-label="{{ 'general.search.search' | t }}">
        <svg width="16" height="16">
          <use href="#icon-search"></use>
        </svg>
      </button>
    </form>
  </div>
  
  <div class="mobile-menu-content">
    {%- if section.settings.menu != blank -%}
      {%- for link in section.settings.menu.links -%}
        <div class="mobile-nav-item">
          <div style="display: flex; align-items: center;">
            <a href="{{ link.url }}" class="mobile-nav-link" style="flex: 1;">{{ link.title }}</a>
            {%- if link.links != blank -%}
              <button class="mobile-dropdown-toggle" onclick="toggleMobileDropdown(this)">+</button>
            {%- endif -%}
          </div>
          
          {%- if link.links != blank -%}
            <div class="mobile-dropdown">
              {%- for child_link in link.links -%}
                <div class="mobile-sub-item{% if child_link.object.image %} has-image{% endif %}">
                  <a href="{{ child_link.url }}" class="mobile-sub-link">
                    <div class="mobile-menu-icon{% unless child_link.object.image %} no-image{% endunless %}">
                      {%- if child_link.object.image -%}
                        <img src="{{ child_link.object.image | image_url: width: 35 }}" 
                             alt="{{ child_link.title }}"
                             loading="lazy">
                      {%- elsif child_link.object.type == 'collection' -%}
                        🏷️
                      {%- else -%}
                        📁
                      {%- endif -%}
                    </div>
                    <span>{{ child_link.title }}</span>
                    {%- if child_link.object.image -%}
                      <span style="margin-left: auto; color: rgb(var(--color-highlight)); font-size: 12px;">●</span>
                    {%- endif -%}
                  </a>
                  
                  {%- if child_link.links != blank -%}
                    <div style="margin-left: 47px; margin-top: 8px; border-left: 2px solid #f0f0f0; padding-left: 15px;">
                      {%- for grandchild_link in child_link.links -%}
                        <div class="mobile-sub-item{% if grandchild_link.object.image %} has-image{% endif %}" style="margin: 4px 0;">
                          <a href="{{ grandchild_link.url }}" class="mobile-sub-link" style="font-size: 13px; padding: 6px 8px;">
                            <div class="mobile-menu-icon" style="width: 28px; height: 28px;">
                              {%- if grandchild_link.object.image -%}
                                <img src="{{ grandchild_link.object.image | image_url: width: 28 }}" 
                                     alt="{{ grandchild_link.title }}"
                                     loading="lazy">
                              {%- elsif grandchild_link.object.type == 'collection' -%}
                                🏷️
                              {%- else -%}
                                📄
                              {%- endif -%}
                            </div>
                            <span>{{ grandchild_link.title }}</span>
                            {%- if grandchild_link.object.image -%}
                              <span style="margin-left: auto; color: rgb(var(--color-highlight)); font-size: 10px;">●</span>
                            {%- endif -%}
                          </a>
                        </div>
                      {%- endfor -%}
                    </div>
                  {%- endif -%}
                </div>
              {%- endfor -%}
            </div>
          {%- endif -%}
        </div>
      {%- endfor -%}
    {%- endif -%}
  </div>
</div>

<!-- CSS Links -->
<link rel="stylesheet" href="{{ 'component-sticky-header.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-list-menu.css' | asset_url }}" media="print" onload="this.media='all'">

{%- if enable_transparent_header -%}
  {{ 'component-transparent-header.css' | asset_url | stylesheet_tag }}
{%- endif -%}

<!-- SVG Icons -->
<svg xmlns="http://www.w3.org/2000/svg" class="hidden">
  {%- if section.settings.cart_icon == 'bag' %}
    <symbol id="icon-cart" fill="none" viewbox="0 0 24 24">
      <path d="M16 10V6a4 4 0 0 0-8 0v4" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" vector-effect="non-scaling-stroke"/>
      <path d="M20.46 15.44 18.39 21a1.39 1.39 0 0 1-1.27.93H6.88A1.39 1.39 0 0 1 5.61 21l-2.07-5.56-1.23-3.26c-.12-.34-.23-.62-.32-.85a17.28 17.28 0 0 1 20 0c-.09.23-.2.51-.32.85Z" fill="none" stroke="currentColor" stroke-miterlimit="10" vector-effect="non-scaling-stroke"/>
    </symbol>
  {% else %}
    <symbol id="icon-cart" fill="none" viewbox="0 0 18 19">
      <path d="M3.09333 5.87954L16.2853 5.87945V5.87945C16.3948 5.8795 16.4836 5.96831 16.4836 6.07785V11.4909C16.4836 11.974 16.1363 12.389 15.6603 12.4714C11.3279 13.2209 9.49656 13.2033 5.25251 13.9258C4.68216 14.0229 4.14294 13.6285 4.0774 13.0537C3.77443 10.3963 2.99795 3.58502 2.88887 2.62142C2.75288 1.42015 0.905376 1.51528 0.283581 1.51478" stroke="currentColor"/>
      <path d="M13.3143 16.8554C13.3143 17.6005 13.9183 18.2045 14.6634 18.2045C15.4085 18.2045 16.0125 17.6005 16.0125 16.8554C16.0125 16.1104 15.4085 15.5063 14.6634 15.5063C13.9183 15.5063 13.3143 16.1104 13.3143 16.8554Z" fill="currentColor"/>
      <path d="M3.72831 16.8554C3.72831 17.6005 4.33233 18.2045 5.07741 18.2045C5.8225 18.2045 6.42651 17.6005 6.42651 16.8554C6.42651 16.1104 5.8225 15.5063 5.07741 15.5063C4.33233 15.5063 3.72831 16.1104 3.72831 16.8554Z" fill="currentColor"/>
    </symbol>
  {% endif -%}
  <symbol id="icon-search" fill="none" viewBox="0 0 15 17">
    <circle cx="7.11113" cy="7.11113" r="6.56113" stroke="currentColor" fill="none"/>
    <path d="M11.078 12.3282L13.8878 16.0009" stroke="currentColor" stroke-linecap="round" fill="none"/>
  </symbol>
  <symbol id="icon-heart" fill="none" viewBox="0 0 24 24">
    <path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z" stroke="currentColor" stroke-width="2"/>
  </symbol>
  <symbol id="icon-account" fill="none" viewBox="0 0 24 24">
    <path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2" stroke="currentColor" stroke-width="2"/>
    <circle cx="12" cy="7" r="4" stroke="currentColor" stroke-width="2"/>
  </symbol>
  <symbol id="icon-hamburger" fill="none" viewBox="0 0 24 24">
    <path d="M3 12H21M3 6H21M3 18H21" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
  </symbol>
  <symbol id="icon-close" fill="none" viewBox="0 0 12 12">
    <path d="M1 1L11 11" stroke="currentColor" stroke-linecap="round" fill="none"/>
    <path d="M11 1L1 11" stroke="currentColor" stroke-linecap="round" fill="none"/>
  </symbol>
</svg>

<script>
// ============ CART DRAWER JAVASCRIPT START ============
// Cart Drawer State
let cartDrawerOpen = false;
let cartData = null;

// Open Cart Drawer
function openCartDrawer() {
  const drawer = document.getElementById('cart-drawer');
  const overlay = document.querySelector('.cart-drawer-overlay');
  
  if (drawer && overlay) {
    drawer.classList.add('active');
    overlay.classList.add('active');
    document.body.style.overflow = 'hidden';
    cartDrawerOpen = true;
    
    // Load cart contents
    loadCartDrawer();
  }
}

// Close Cart Drawer
function closeCartDrawer() {
  const drawer = document.getElementById('cart-drawer');
  const overlay = document.querySelector('.cart-drawer-overlay');
  
  if (drawer && overlay) {
    drawer.classList.remove('active');
    overlay.classList.remove('active');
    document.body.style.overflow = '';
    cartDrawerOpen = false;
  }
}

// Global settings from Liquid
const recommendationSettings = {
  type: '{{ section.settings.recommendation_type }}',
  productsCount: {{ section.settings.recommended_products_count | default: 4 }},
  manualCollection: '{{ section.settings.recommended_collection.handle }}',
  manualProducts: [
    {%- if section.settings.recommended_collection != blank -%}
      {%- assign manual_products = section.settings.recommended_collection.products | limit: section.settings.recommended_products_count -%}
      {%- for product in manual_products -%}
        {
          id: {{ product.id }},
          title: {{ product.title | json }},
          handle: {{ product.handle | json }},
          price: {{ product.price }},
          compare_at_price: {{ product.compare_at_price | default: 0 }},
          image: {{ product.featured_image | image_url: width: 100 | json }},
          url: {{ product.url | json }},
          variant_id: {{ product.selected_or_first_available_variant.id }}
        }{%- unless forloop.last -%},{%- endunless -%}
      {%- endfor -%}
    {%- endif -%}
  ]
};

// Load recommendations
async function loadRecommendations() {
  const recommendationsSection = document.getElementById('you-may-like-section');
  const container = document.getElementById('recommended-products-container');
  
  if (!recommendationsSection || !container) return;
  
  // Use manual collection products if set
  const manualProducts = recommendationSettings.manualProducts;
  
  if (manualProducts && manualProducts.length > 0) {
    renderRecommendedProducts(manualProducts, container);
    recommendationsSection.style.display = 'block';
  } else {
    // Try to fetch from a default collection
    try {
      const response = await fetch('/collections/all/products.json?limit=4');
      if (response.ok) {
        const data = await response.json();
        const products = data.products.slice(0, 4).map(product => ({
          id: product.id,
          title: product.title,
          handle: product.handle,
          price: product.variants[0].price * 100,
          compare_at_price: product.variants[0].compare_at_price ? product.variants[0].compare_at_price * 100 : 0,
          image: product.images[0] || '',
          url: `/products/${product.handle}`,
          variant_id: product.variants[0].id
        }));
        
        if (products.length > 0) {
          renderRecommendedProducts(products, container);
          recommendationsSection.style.display = 'block';
        }
      }
    } catch (error) {
      console.error('Error loading recommendations:', error);
    }
  }
}

// Render products
function renderRecommendedProducts(products, container) {
  if (!products || products.length === 0) return;
  
  let html = '';
  products.forEach(product => {
    const hasDiscount = product.compare_at_price > product.price;
    const displayPrice = formatMoney(product.price);
    const originalPrice = hasDiscount ? formatMoney(product.compare_at_price) : '';
    
    html += `
      <div class="recommended-product">
        <img src="${product.image || '/assets/placeholder.svg'}" 
             alt="${product.title}" 
             class="recommended-product-image"
             loading="lazy">
        <div class="recommended-product-info">
          <a href="${product.url}" class="recommended-product-title">
            ${product.title}
          </a>
          <div class="recommended-product-price">
            ${hasDiscount ? `<span class="recommended-original-price">${originalPrice}</span>` : ''}
            <span class="recommended-sale-price">${displayPrice}</span>
          </div>
          <button class="recommended-add-btn" 
                  data-variant-id="${product.variant_id}"
                  onclick="quickAddToCart(${product.variant_id}, this)">
            Add
          </button>
        </div>
      </div>
    `;
  });
  
  container.innerHTML = html;
}

// Quick add to cart
async function quickAddToCart(variantId, button) {
  try {
    const originalText = button.textContent;
    button.textContent = '...';
    button.disabled = true;
    button.classList.add('loading');
    
    const formData = new FormData();
    formData.append('id', variantId);
    formData.append('quantity', 1);
    
    const response = await fetch('/cart/add.js', {
      method: 'POST',
      body: formData
    });
    
    if (response.ok) {
      await loadCartDrawer();
      button.textContent = '✓';
      button.classList.remove('loading');
      button.classList.add('added');
      
      setTimeout(() => {
        button.textContent = originalText;
        button.classList.remove('added');
        button.disabled = false;
      }, 2000);
    }
  } catch (error) {
    console.error('Error adding to cart:', error);
    button.textContent = 'Error';
    setTimeout(() => {
      button.textContent = 'Add';
      button.disabled = false;
    }, 2000);
  }
}

// Load Cart Contents
async function loadCartDrawer() {
  try {
    const response = await fetch('/cart.js');
    cartData = await response.json();
    renderCartDrawer();
  } catch (error) {
    console.error('Error loading cart:', error);
  }
}

// Render Cart Drawer
function renderCartDrawer() {
  if (!cartData) return;
  
  const cartBody = document.getElementById('cart-drawer-body');
  const cartFooter = document.getElementById('cart-drawer-footer');
  const cartItemsCount = document.getElementById('cart-items-count');
  const cartSubtotal = document.getElementById('cart-subtotal');
  const cartTotal = document.getElementById('cart-total');
  const cartBubble = document.querySelector('.cart-count-bubble');
  
  // Update cart count
  if (cartItemsCount) {
    cartItemsCount.textContent = `${cartData.item_count} ${cartData.item_count === 1 ? 'item' : 'items'}`;
  }
  
  if (cartBubble) {
    cartBubble.textContent = cartData.item_count;
    cartBubble.style.display = cartData.item_count > 0 ? 'flex' : 'none';
  }
  
  // Empty cart state
  if (cartData.item_count === 0) {
    cartBody.innerHTML = `
      <div class="cart-empty-state">
        <svg class="cart-empty-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor">
          <path d="M3 3h18l-1 13H4L3 3zM3 3l1 13m0 0h16m-16 0a2 2 0 104 0m12 0a2 2 0 104 0M8 3V1m8 2V1" stroke-width="1.5"/>
        </svg>
        <p class="cart-empty-text">Your bag is empty</p>
        <button class="continue-shopping-btn" onclick="closeCartDrawer()">Continue Shopping</button>
      </div>
    `;
    cartFooter.style.display = 'none';
    
    // Hide recommendations when cart is empty
    document.getElementById('cart-drawer').classList.remove('with-recommendations');
    const recommendationsSection = document.getElementById('you-may-like-section');
    if (recommendationsSection) {
      recommendationsSection.style.display = 'none';
    }
    return;
  }
  
  // Build cart items HTML
  let cartHTML = '<div class="cart-items-container">';
  
  cartData.items.forEach(item => {
    const originalPrice = item.original_price || item.price;
    const hasDiscount = originalPrice > item.price;
    
    cartHTML += `
      <div class="cart-drawer-item" data-key="${item.key}">
        <button class="cart-item-remove" onclick="removeCartItem('${item.key}')" aria-label="Remove item">
          <svg width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor">
            <path d="M3 6h18" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
            <path d="M8 6V4a1 1 0 011-1h6a1 1 0 011 1v2" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
            <path d="M19 6v14a2 2 0 01-2 2H7a2 2 0 01-2-2V6" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
            <path d="M10 11v6" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
            <path d="M14 11v6" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
        </button>
        
        <img src="${item.image}" alt="${item.title}" class="cart-item-image" loading="lazy">
        
        <div class="cart-item-info">
          <a href="${item.url}" class="cart-item-title">${item.product_title}</a>
          
          ${item.variant_title ? `
            <div class="cart-item-variant">
              <span>${item.variant_title}</span>
            </div>
          ` : ''}
          
          <div class="cart-item-price-row">
            ${hasDiscount ? `<span class="cart-item-original-price">${formatMoney(originalPrice)}</span>` : ''}
            <span class="cart-item-sale-price">${formatMoney(item.price)}</span>
          </div>
          
          <div class="cart-item-actions">
            <div class="cart-quantity-selector">
              <button class="quantity-btn" onclick="updateQuantity('${item.key}', ${item.quantity - 1})" ${item.quantity <= 1 ? 'disabled' : ''}>−</button>
              <input type="text" class="quantity-value" value="${item.quantity}" readonly>
              <button class="quantity-btn" onclick="updateQuantity('${item.key}', ${item.quantity + 1})">+</button>
            </div>
          </div>
        </div>
      </div>
    `;
  });
  
  cartHTML += '</div>';
  cartBody.innerHTML = cartHTML;
  
  // Update footer
  cartFooter.style.display = 'block';
  cartSubtotal.textContent = formatMoney(cartData.total_price);
  cartTotal.textContent = formatMoney(cartData.total_price);
  
  // Show recommendations
  document.getElementById('cart-drawer').classList.add('with-recommendations');
  loadRecommendations();
}

// Format Money
function formatMoney(cents) {
  return '{{ cart.currency.symbol }}' + (cents / 100).toFixed(2);
}

// Update Item Quantity
async function updateQuantity(key, newQuantity) {
  if (newQuantity < 0) return;
  
  try {
    const response = await fetch('/cart/change.js', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        id: key,
        quantity: newQuantity
      })
    });
    
    cartData = await response.json();
    renderCartDrawer();
    
  } catch (error) {
    console.error('Error updating quantity:', error);
  }
}

// Remove Item
async function removeCartItem(key) {
  const item = document.querySelector(`[data-key="${key}"]`);
  if (item) {
    item.classList.add('removing');
  }
  
  setTimeout(() => {
    updateQuantity(key, 0);
  }, 300);
}

// ============ CART DRAWER JAVASCRIPT END ============

// ============ EXISTING JAVASCRIPT (MEGA MENU, MOBILE MENU, ETC.) ============
document.addEventListener('DOMContentLoaded', function() {
  // Function to position mega menu full width and dynamically adjust
  function positionMegaMenu() {
    const header = document.querySelector('.header-wrapper');
    const megaMenus = document.querySelectorAll('.mega-menu');
    
    if (!header || !megaMenus.length) return;
    
    // Get exact header position
    const headerRect = header.getBoundingClientRect();
    const topPosition = headerRect.bottom;
    
    // Set CSS variable for top position
    document.documentElement.style.setProperty('--mega-menu-top', `${topPosition}px`);
    
    // Apply to each mega menu for full width and dynamic adjustments
    megaMenus.forEach(menu => {
      menu.style.setProperty('--mega-menu-top', `${topPosition}px`);
      
      // Dynamic grid adjustments based on content
      const content = menu.querySelector('.mega-menu-content');
      if (content) {
        const columns = parseInt(content.getAttribute('data-columns') || '0');
        const items = parseInt(content.getAttribute('data-items') || '0');
        const screenWidth = window.innerWidth;
        
        // Remove existing dynamic classes
        content.classList.remove('dynamic-grid-1', 'dynamic-grid-2', 'dynamic-grid-3', 'dynamic-grid-4', 'dynamic-grid-5');
        
        // Add appropriate class based on screen size and content
        if (screenWidth >= 1400) {
          if (columns > 6) content.classList.add('dynamic-grid-1');
          else if (items > 20) content.classList.add('dynamic-grid-2');
        } else if (screenWidth >= 1200) {
          if (columns > 5) content.classList.add('dynamic-grid-3');
          else if (items > 15) content.classList.add('dynamic-grid-4');
        } else if (screenWidth >= 900) {
          if (columns > 4) content.classList.add('dynamic-grid-5');
        }
      }
    });
  }
  
  // Initial positioning
  positionMegaMenu();
  
  // Update on window resize with debouncing
  let resizeTimeout;
  window.addEventListener('resize', function() {
    clearTimeout(resizeTimeout);
    resizeTimeout = setTimeout(function() {
      positionMegaMenu();
    }, 100);
  });
  
  // Update on scroll for sticky header
  let lastScrollTop = 0;
  window.addEventListener('scroll', function() {
    const scrollTop = window.pageYOffset || document.documentElement.scrollTop;
    const header = document.querySelector('.shopify-section-header');
    
    if (header) {
      if (scrollTop > lastScrollTop && scrollTop > 100) {
        header.classList.add('shopify-section-header-hidden');
      } else {
        header.classList.remove('shopify-section-header-hidden');
      }
      
      if (scrollTop > 50) {
        header.classList.add('shopify-section-header-sticky');
      } else {
        header.classList.remove('shopify-section-header-sticky');
      }
    }
    
    lastScrollTop = scrollTop;
    positionMegaMenu();
  });
  
  // Mobile Menu Functions
  window.toggleMobileMenu = function() {
    const menu = document.getElementById('mobile-menu');
    if (menu) {
      menu.classList.add('active');
      document.body.style.overflow = 'hidden';
    }
  }
  
  window.closeMobileMenu = function() {
    const menu = document.getElementById('mobile-menu');
    if (menu) {
      menu.classList.remove('active');
      document.body.style.overflow = '';
    }
  }
  
  window.toggleMobileDropdown = function(button) {
    const dropdown = button.parentElement.nextElementSibling;
    const isActive = dropdown.classList.contains('active');
    
    // Close all other dropdowns
    document.querySelectorAll('.mobile-dropdown.active').forEach(item => {
      item.classList.remove('active');
    });
    document.querySelectorAll('.mobile-dropdown-toggle').forEach(btn => {
      btn.textContent = '+';
      btn.classList.remove('active');
    });
    
    // Toggle current dropdown
    if (!isActive) {
      dropdown.classList.add('active');
      button.textContent = '−';
      button.classList.add('active');
    }
  }
  
  // Search Modal Functions - Desktop Only
  window.openSearchModal = function() {
    // Check if on desktop
    if (window.innerWidth > 990) {
      const modal = document.getElementById('search-modal');
      const input = document.getElementById('search-modal-input');
      
      if (modal) {
        modal.classList.add('active');
        document.body.style.overflow = 'hidden';
        
        setTimeout(() => {
          if (input) input.focus();
        }, 300);
      }
    }
  }
  
  window.closeSearchModal = function(event) {
    if (event && event.target !== event.currentTarget) return;
    
    const modal = document.getElementById('search-modal');
    if (modal) {
      modal.classList.remove('active');
      document.body.style.overflow = '';
    }
  }
  
  // Search functionality
  const searchInput = document.getElementById('search-modal-input');
  if (searchInput) {
    searchInput.addEventListener('keydown', function(e) {
      if (e.key === 'Enter') {
        e.preventDefault();
        const query = e.target.value.trim();
        if (query) {
          window.location.href = `/search?q=${encodeURIComponent(query)}`;
        }
      }
      
      if (e.key === 'Escape') {
        closeSearchModal();
      }
    });
  }
  
  // Close mobile menu on resize to desktop
  window.addEventListener('resize', function() {
    if (window.innerWidth > 990) {
      closeMobileMenu();
    }
  });
  
  // Handle mega menu hover delay
  let megaMenuTimeout;
  const navItems = document.querySelectorAll('.nav-item');
  
  navItems.forEach(item => {
    item.addEventListener('mouseenter', function() {
      clearTimeout(megaMenuTimeout);
      positionMegaMenu();
      
      // Close other mega menus
      navItems.forEach(otherItem => {
        if (otherItem !== item) {
          otherItem.classList.remove('active');
        }
      });
      
      this.classList.add('active');
    });
    
    item.addEventListener('mouseleave', function() {
      const item = this;
      megaMenuTimeout = setTimeout(() => {
        item.classList.remove('active');
      }, 300);
    });
  });
  
  // Prevent mega menu from closing when hovering over it
  const megaMenus = document.querySelectorAll('.mega-menu');
  megaMenus.forEach(menu => {
    menu.addEventListener('mouseenter', function() {
      clearTimeout(megaMenuTimeout);
    });
    
    menu.addEventListener('mouseleave', function() {
      const parentItem = this.closest('.nav-item');
      if (parentItem) {
        megaMenuTimeout = setTimeout(() => {
          parentItem.classList.remove('active');
        }, 300);
      }
    });
  });
  
  // Handle add to cart with drawer
  const addToCartForms = document.querySelectorAll('form[action*="/cart/add"]');
  addToCartForms.forEach(form => {
    form.addEventListener('submit', async function(e) {
      e.preventDefault();
      
      const submitButton = this.querySelector('[type="submit"]');
      const originalText = submitButton ? submitButton.textContent : '';
      
      if (submitButton) {
        submitButton.textContent = 'Adding...';
        submitButton.disabled = true;
      }
      
      try {
        const formData = new FormData(this);
        
        const response = await fetch('/cart/add.js', {
          method: 'POST',
          body: formData
        });
        
        if (response.ok) {
          const item = await response.json();
          
          // Open cart drawer
          openCartDrawer();
        }
        
      } catch (error) {
        console.error('Error adding to cart:', error);
      } finally {
        if (submitButton) {
          submitButton.textContent = originalText;
          submitButton.disabled = false;
        }
      }
    });
  });
  
  // ESC key to close drawer
  document.addEventListener('keydown', function(e) {
    if (e.key === 'Escape' && cartDrawerOpen) {
      closeCartDrawer();
    }
  });
});
</script>

<!-- Sticky Header JavaScript -->
{% javascript %}
  class StickyHeader extends HTMLElement {
    constructor() {
      super();
    }

    connectedCallback() {
      this.header = document.querySelector('.shopify-section-header');
      this.headerBounds = {};
      this.currentScrollTop = 0;
      this.preventReveal = false;

      this.onScrollHandler = this.onScroll.bind(this);
      window.addEventListener('scroll', this.onScrollHandler, false);
      this.createObserver();
    }

    disconnectedCallback() {
      window.removeEventListener('scroll', this.onScrollHandler);
    }

    createObserver() {
      let observer = new IntersectionObserver((entries, observer) => {
        this.headerBounds = entries[0].intersectionRect;
        if (this.headerBounds.top === 0 && this.headerBounds.bottom === 0) {
          const scrollTop = window.pageYOffset || document.documentElement.scrollTop;
          const boundingClientRect = entries[0].boundingClientRect;
          this.headerBounds = {
            top: scrollTop + boundingClientRect.top,
            bottom: scrollTop + boundingClientRect.bottom
          };
        }
        observer.disconnect();
      });
      observer.observe(this.header);
    }

    onScroll() {
      const scrollTop = window.pageYOffset || document.documentElement.scrollTop;
      
      if (scrollTop > this.currentScrollTop && scrollTop > this.headerBounds.bottom) {
        requestAnimationFrame(this.hide.bind(this));
      } else if (scrollTop < this.currentScrollTop && scrollTop > this.headerBounds.bottom) {
        if (!this.preventReveal) {
          requestAnimationFrame(this.reveal.bind(this));
        }
      } else if (scrollTop <= this.headerBounds.top) {
        requestAnimationFrame(this.reset.bind(this));
      }
      
      this.currentScrollTop = scrollTop;
    }

    hide() {
      this.header.classList.add('shopify-section-header-hidden', 'shopify-section-header-sticky');
    }

    reveal() {
      this.header.classList.add('shopify-section-header-sticky');
      this.header.classList.remove('shopify-section-header-hidden');
    }

    reset() {
      this.header.classList.remove('shopify-section-header-hidden', 'shopify-section-header-sticky');
    }
  }
  customElements.define('sticky-header', StickyHeader);
{% endjavascript %}

{% schema %}
{
  "name": "Header",
  "class": "shopify-section-header",
  "settings": [
    {
      "type": "header",
      "content": "Logo Settings"
    },
    {
      "type": "image_picker",
      "id": "logo",
      "label": "Desktop Logo"
    },
    {
      "type": "image_picker",
      "id": "mobile_logo",
      "label": "Mobile Logo"
    },
    {
      "type": "range",
      "id": "logo_height",
      "min": 30,
      "max": 200,
      "step": 2,
      "default": 50,
      "unit": "px",
      "label": "Desktop Logo Height"
    },
    {
      "type": "range",
      "id": "mobile_logo_height",
      "min": 30,
      "max": 200,
      "step": 2,
      "default": 44,
      "unit": "px",
      "label": "Mobile Logo Height"
    },
    {
      "type": "header",
      "content": "Menu Settings"
    },
    {
      "type": "link_list",
      "id": "menu",
      "default": "main-menu",
      "label": "Main Menu",
      "info": "Select your main navigation menu. Collections with images will automatically display in mega menus."
    },
    {
      "type": "checkbox",
      "id": "enable_dropdown_menu",
      "default": true,
      "label": "Enable Mega Menu",
      "info": "Show mega menus for menu items with sub-items"
    },
    {
      "type": "header",
      "content": "You May Also Like Settings"
    },
    {
      "type": "select",
      "id": "recommendation_type",
      "options": [
        {
          "value": "manual",
          "label": "Manual Collection"
        },
        {
          "value": "automatic",
          "label": "Automatic (All Products)"
        }
      ],
      "default": "manual",
      "label": "Recommendation Type"
    },
    {
      "type": "collection",
      "id": "recommended_collection",
      "label": "Recommended Products Collection",
      "info": "Select collection for recommended products"
    },
    {
      "type": "text",
      "id": "recommended_title",
      "label": "Recommended Section Title",
      "default": "You May Also Like"
    },
    {
      "type": "range",
      "id": "recommended_products_count",
      "min": 2,
      "max": 8,
      "step": 1,
      "default": 4,
      "label": "Number of Recommended Products"
    },
    {
      "type": "header",
      "content": "Header Behavior"
    },
    {
      "type": "checkbox",
      "id": "enable_sticky_header",
      "default": true,
      "label": "Enable Sticky Header"
    },
    {
      "type": "checkbox",
      "id": "show_line_separator",
      "default": true,
      "label": "Show Border Line"
    },
    {
      "type": "select",
      "id": "cart_icon",
      "options": [
        {
          "value": "cart",
          "label": "Cart"
        },
        {
          "value": "bag",
          "label": "Bag"
        }
      ],
      "default": "cart",
      "label": "Cart Icon Style"
    },
    {
      "type": "header",
      "content": "Transparent Header"
    },
    {
      "type": "checkbox",
      "id": "enable_transparent_header",
      "label": "Enable Transparent Header",
      "info": "Make header background transparent. Works best on homepage with hero sections.",
      "default": false
    },
    {
      "type": "color",
      "id": "transparent_text_color",
      "label": "Transparent Header Text Color",
      "info": "Text color when header is transparent",
      "default": "#ffffff"
    },
    {
      "type": "header",
      "content": "Colors"
    },
    {
      "type": "color",
      "id": "colors_text",
      "label": "Text Color",
      "default": "#282828"
    },
    {
      "type": "color",
      "id": "colors_icons",
      "label": "Icons Color",
      "info": "Color for header icons (search, account, cart, etc.)",
      "default": "#282828"
    },
    {
      "type": "color",
      "id": "colors_border",
      "label": "Border Color",
      "default": "#d2d5d9"
    },
    {
      "type": "color",
      "id": "colors_background",
      "label": "Background Color",
      "default": "#f8f6f3"
    },
    {
      "type": "color",
      "id": "colors_highlight",
      "label": "Highlight/Hover Color",
      "info": "Color when hovering over links and buttons",
      "default": "#A85A3B"
    },
    {
      "type": "header",
      "content": "Spacing"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 36,
      "step": 2,
      "unit": "px",
      "label": "Top Padding",
      "default": 12
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 36,
      "step": 2,
      "unit": "px",
      "label": "Bottom Padding",
      "default": 12
    }
  ]
}
{% endschema %}